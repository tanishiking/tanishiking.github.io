<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Rikito Taniguchi</title><link>https://tanishiking.github.io/</link><description>Recent content on Rikito Taniguchi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://tanishiking.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://tanishiking.github.io/cv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tanishiking.github.io/cv/</guid><description>Rikito Taniguchi Contact Name: Rikito Taniguchi Github: https://github.com/tanishiking Twitter: @tanishiking25 Mail: rikiriki1238@gmail.com Summary 5 years of experience in web development with Computer Science knowledge. Enthusiastic OSS developer, primarily in Scala developer tools (formatter/IDE/linter). Good at untangling big software and writing maintainable code and documents. Cross-functional communicator with empathy. Skills Languages I often use Scala, TypeScript Languages I experienced with Go, Python, Perl, OCaml Education Master in Computer Science, Tokyo Institute of Technology (2021/04 - Present) Bachelor in Computer Science, Kyoto University (2013/04 - 2017/03) Employment History Google Summer of Code (2021/06 - 2021/08) Add synthetics and symbol information for semanticdb in Scala 3</description></item><item><title>Count unicode characters in JavaScript</title><link>https://tanishiking.github.io/posts/count-unicode-codepoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tanishiking.github.io/posts/count-unicode-codepoint/</guid><description>There are several ways to count strings in JS in Unicode Code Point units instead of 16-bit units, but in the end, I wonder which method works in most environments (including legacy browsers like IE11) as of May 2017.</description></item><item><title>IME event handling in JavaScript cross-browser (2017)</title><link>https://tanishiking.github.io/posts/sample/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tanishiking.github.io/posts/sample/</guid><description>In 2017, when CompositionEvent is supported by many major browsers, I thought it would be easy to implement a small input completion function that supports Japanese input in JavaScript, but the details of the implementation differed depending on the browser...</description></item></channel></rss>